---
title: "Introducing shinystate"
subtitle: "Launching Shiny collaboration to new heights"
author: 
  - name: Eric Nantz
    affiliation:
      - Statistician / Developer / Podcaster
      - Eli Lilly & Company
      - "{{< fa brands bluesky >}} [@rpodcast.bsky.social](https://bsky.app/profile/rpodcast.bsky.social)"
      - "{{< fa brands mastodon >}} [@rpodcast@podcastindex.social](https://podcastindex.social/@rpodcast)"
      - "{{< fa brands linkedin >}} [@eric-nantz](https://www.linkedin.com/in/eric-nantz-6621617/)"
date: September 17, 2025
format:
  revealjs:
    link-external-newwindow: true
    menu: true
    code-line-numbers: false
    theme: [default, custom.scss]
    footer: "[rpodcast.github.io/shinystate-positconf2025/](https://rpodcast.github.io/shinystate-positconf2025/)"
---

## Complex Applications

![](assets/img/large_app.png)


## Bookmarkable State

::: {.qrdiv}
{{< qrcode https://shiny.posit.co/r/articles/share/bookmarking-state/ width=400 height=400 colorDark='#0011bb' >}}
:::

:::: {.columns}

::: {.column width="70%"}

![](assets/img/bookmark_state_article_blurred.png)

:::

::: {.column width="30%"}

* Vitally important for complex user interface applications
* Not quite everything I needed ...

:::

::::

::: footer
[Bookmarkable State Introduction](https://shiny.posit.co/r/articles/share/bookmarking-state/)
:::

## {background-image="assets/img/rpharma_joe_cheng.jpg" background-size="contain"}

::: footer
[R/Pharma 2018 - rinpharma.com](https://rinpharma.com)
:::


## The Big Idea Emerges: shinystate

* Build upon existing Shiny Bookmarkable-state capability with key enhancements
    * Granular Control
    * Collaboration

## `shinystate` 1

```{.r code-line-numbers="|3|5|9"}
library(shiny)
library(bslib)
library(shinystate)

storage <- StorageClass$new()

ui <- function(request) {
  page_sidebar(
    use_shinystate(),
    # additoinal UI code
  )
}
```

::: {.notes}
* `StorageClass$new()` initializes the R6 class for your shinystate bookmark sessions
* By default, a temporary directory is used to store bookmarkable state files
* `use_shinystate()` injects required JavaScript bindings
:::

## `shinystate` 2

```{.r code-line-numbers="|2|6-9|11-14"}
server <- function(input, output, session) {
  storage$register_metadata()

  # additonal server logic

  observeEvent(input$bookmark, {
    storage$snapshot()
    showNotification("Session successfully saved")
  })

  observeEvent(input$restore, {
    session_df <- storage$get_sessions()
    storage$restore(tail(session_df$url, n = 1))
  })
}
```

::: {.notes}
* `storage$register_metadata()` handles registering custom `shiny::onBookmarked` callback
* `storage$snapshot()` performs the bookmarking snapshot, wrapping `session$doBookmark()`. But you get to include optional metadata as a named list!
* `storage$restore()` loads the supplied bookmark state session by the custom url
:::

## Storage and Sharing: `{pins}`

:::: {.columns}

::: {.column width="50%"}

![](assets/img/puzzly_sharing.svg)

:::

::: {.column width="50%"}

* More text here

:::

::::

## From All Directions {background-image="assets/img/roundabout_china_traffic.webp" background-size='70%'}

# Backup

## {background-image="assets/img/collaboration_meeting.jpg" background-size="contain"}

::: {.absolute left="1%" top="0%" style="font-size:1.5em; padding: 0.1em 0.2em; background-color: rgba(255, 255, 255, .5); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;"}
High-stakes Collaboration
:::

